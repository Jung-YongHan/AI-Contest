{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9JZIT8sd_ttU","executionInfo":{"status":"ok","timestamp":1667638925167,"user_tz":-540,"elapsed":15132,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"b744f8fd-a6d9-4c39-c320-86c062f27480"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"WfWTfJo5WOvW"},"source":["## 라이브러리 정의 및 데이터 로드"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"i56hLkhfTnbR","executionInfo":{"status":"ok","timestamp":1667638933658,"user_tz":-540,"elapsed":725,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.preprocessing import MinMaxScaler"]},{"cell_type":"code","source":["PATH = '/content/drive/MyDrive/AI_Contest/traffic/'"],"metadata":{"id":"mPPCdUki_0I1","executionInfo":{"status":"ok","timestamp":1667638933658,"user_tz":-540,"elapsed":2,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8UGfz-VuTvSz","outputId":"7fd8d4f2-0591-4a43-d8cb-3a7d1ec9d4c5","executionInfo":{"status":"ok","timestamp":1667638948109,"user_tz":-540,"elapsed":5308,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(4701217, 23)\n","(291241, 22)\n"]}],"source":["data_train = pd.read_parquet(PATH + 'datasets/data_train.parquet')\n","data_test = pd.read_parquet(PATH + 'datasets/data_test.parquet')\n","data_info = pd.read_csv(PATH + 'datasets/data_info.csv')\n","print(data_train.shape)\n","print(data_test.shape)\n","# data_train.head(1).transpose()"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"lIBNlDLZFXmW","executionInfo":{"status":"ok","timestamp":1667638950326,"user_tz":-540,"elapsed":284,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data_test['target'] = np.zeros(len(data_test))"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"XiCuzAxFTxQ4","executionInfo":{"status":"ok","timestamp":1667638951296,"user_tz":-540,"elapsed":675,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data_train.drop(['id'], axis=1, inplace=True)\n","data_test.drop(['id'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"69gYVXOOT4fl","executionInfo":{"status":"ok","timestamp":1667638952682,"user_tz":-540,"elapsed":1058,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data = pd.concat([data_train, data_test], axis=0)\n","target = data_train['target']"]},{"cell_type":"markdown","metadata":{"id":"t-ROAbyNWSrI"},"source":["## 데이터 전처리"]},{"cell_type":"markdown","source":["전처리 첫번째 version"],"metadata":{"id":"l5rkZdlKB2Ts"}},{"cell_type":"markdown","metadata":{"id":"MUfgUMGUUKoG"},"source":["#### base_date"]},{"cell_type":"markdown","metadata":{"id":"LKcchrbFUMX4"},"source":["월 별로 고려 시 선형성을 띌 수 있기에 계절로 구분하여 OneHotEncoding"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ARk7UnkeUF1V"},"outputs":[],"source":["def change_date_to_season(x):\n","  month = int(str(x)[4:6])\n","  if 3 <= month <= 5:\n","    return \"spring\"\n","  elif 6 <= month <= 8:\n","    return \"summer\"\n","  elif 9 <= month <= 11:\n","    return \"autumn\"\n","  else:\n","    return \"winter\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ENabiqfjUoFn"},"outputs":[],"source":["data['base_date'] = data['base_date'].apply(change_date_to_season)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ie1czZYfRtbD"},"outputs":[],"source":["df_base_date1 = pd.get_dummies(data['base_date'])\n","df_base_date2 = df_base_date1[['spring', 'summer', 'autumn', 'winter']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MNFSPdeFRUqU"},"outputs":[],"source":["data.drop('base_date', axis=1, inplace=True)\n","data = pd.concat([data, df_base_date2], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"G4uAOyLTWKb_"},"source":["#### day_of_week"]},{"cell_type":"markdown","metadata":{"id":"zl47kLtEWVZ6"},"source":["평일과 주말로 나누는 것으로 결정"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zGhucGp6NjIY"},"outputs":[],"source":["def change_week_to_str(x):\n","  if x in ['월', '화', '수', '목', '금']:\n","    return 'weekday'\n","  else:\n","    return 'weekend'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dyHbgkCONyJj"},"outputs":[],"source":["data['day_of_week'] = data['day_of_week'].apply(change_week_to_str)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zBSqJSonN6GX"},"outputs":[],"source":["df_day_of_week = pd.get_dummies(data['day_of_week'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FBJrCHYFSc7C"},"outputs":[],"source":["data.drop('day_of_week', axis=1, inplace=True)\n","data = pd.concat([data, df_day_of_week], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"vhMgrJ3iWZ8s"},"source":["#### base_hour"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PhI1LCPpV829"},"outputs":[],"source":["def change_time_to_slot(x):\n","  if 8 <= x <= 12:\n","    return \"time1\"\n","  elif 13 <= x <= 17:\n","    return \"time2\"\n","  elif 18 <= x <= 22:\n","    return \"time3\"\n","  else:\n","    return \"time4\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VReiIqjzZqIt"},"outputs":[],"source":["data['base_hour'] = data['base_hour'].apply(change_time_to_slot)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cTTy87b8S9T6"},"outputs":[],"source":["df_base_hour = pd.get_dummies(data['base_hour'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bwldt8NaS7ja"},"outputs":[],"source":["data.drop('base_hour', axis=1, inplace=True)\n","data = pd.concat([data, df_base_hour], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"bOTmIZWqXEmL"},"source":["#### lane_count"]},{"cell_type":"markdown","metadata":{"id":"cmwFeS24aOJA"},"source":["인코딩을 할 필요는 없어보임"]},{"cell_type":"markdown","metadata":{"id":"G67xaXH-a0Fb"},"source":["#### road_rating"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ljakn58wa2rA"},"outputs":[],"source":["df_road_rating = pd.get_dummies(data['road_rating'], prefix=\"rate\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zinxvUxmTJeK"},"outputs":[],"source":["data.drop('road_rating', axis=1, inplace=True)\n","data = pd.concat([data, df_road_rating], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"N_W5VtdzcndG"},"source":["#### multi_linked"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vtjXSgLAcq_o"},"outputs":[],"source":["def change_int_to_char(x):\n","  if x == 0:\n","    return 'o'\n","  else:\n","    return 'x'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RSKUdoCwc16N"},"outputs":[],"source":["data['multi_linked'] = data['multi_linked'].apply(change_int_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-rsdXK_PdDXw"},"outputs":[],"source":["df_multi_linked = pd.get_dummies(data['multi_linked'], prefix='multi')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3tNrsmdjTQIu"},"outputs":[],"source":["data.drop('multi_linked', axis=1, inplace=True)\n","data = pd.concat([data, df_multi_linked], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"jtcZJrP_dTKr"},"source":["#### connect_code"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kcVcEnYJdGvI"},"outputs":[],"source":["def change_int_to_char(x):\n","  if x == 0:\n","    return 'x'\n","  else:\n","    return 'o'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DydDeBVVdYDa"},"outputs":[],"source":["data['connect_code'] = data['connect_code'].apply(change_int_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FMszXdoCdZ3y"},"outputs":[],"source":["df_connect_code = pd.get_dummies(data['connect_code'], prefix='connect')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BsPajWIWTXNI"},"outputs":[],"source":["data.drop('connect_code', axis=1, inplace=True)\n","data = pd.concat([data, df_connect_code], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"0EAfPYWF8iIH"},"source":["#### maximum_speed_limit"]},{"cell_type":"markdown","metadata":{"id":"iz5AqQ5YCVlP"},"source":["80대체를 생각해 보았으나 데이터 개수도 적고 잘못 기입될(이상치일) 확률이 적다고 판단되어 제거로 선택"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"StV824UwAafS"},"outputs":[],"source":["# drop 시 런타임 에러가 떠서 dropna 사용\n","def change_40_to_nan(x):\n","  if x == 40:\n","    return np.nan\n","  else:\n","    return x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nM271UJYKnw6"},"outputs":[],"source":["data['maximum_speed_limit'] = data['maximum_speed_limit'].apply(change_40_to_nan)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VHrXTfSsKu-c"},"outputs":[],"source":["data.dropna(axis=0, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8r4ZBtCcDkvn"},"outputs":[],"source":["data['maximum_speed_limit'] = data['maximum_speed_limit'].astype('int64')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NQFmYDUKG_Rf"},"outputs":[],"source":["df_maximum_speed_limit = pd.get_dummies(data['maximum_speed_limit'], prefix='limit')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f11Hdf07LxyL"},"outputs":[],"source":["data.drop('maximum_speed_limit', axis=1, inplace=True)\n","data = pd.concat([data, df_maximum_speed_limit], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"YottxjFd8n5s"},"source":["#### weight_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"71Kd624XBPmh"},"outputs":[],"source":["data['weight_restricted'] = data['weight_restricted'].astype('int64')\n","df_weight_restricted = pd.get_dummies(data['weight_restricted'], prefix='weight')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jb7IZmmdTbX7"},"outputs":[],"source":["data.drop('weight_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_weight_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"hZk60ZOP8rBP"},"source":["#### height_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j-j9d2njLc3z"},"outputs":[],"source":["data.drop('height_restricted', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"lNVWrz1-8s7m"},"source":["#### road_type"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CixKXZY4L8iQ"},"outputs":[],"source":["df_road_type = pd.get_dummies(data['road_type'], prefix='type')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S20HEIliTfb0"},"outputs":[],"source":["data.drop('road_type', axis=1, inplace=True)\n","data = pd.concat([data, df_road_type], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"tgXzmSpam0V2"},"source":["#### start_latitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4qcUbHA5nITG"},"outputs":[],"source":["resh = np.array(data['start_latitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['start_latitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"lfB7snS8m3KB"},"source":["#### start_longitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qtJ7goXMnKNM"},"outputs":[],"source":["resh = np.array(data['start_longitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['start_longitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"A4m-bkJ88uG6","tags":[]},"source":["#### start_turn_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gaP6NhSqMf_9"},"outputs":[],"source":["def change_str_to_char(x):\n","  if x == '없음':\n","    return 'x'\n","  else:\n","    return 'o'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mR3CQziqObdE"},"outputs":[],"source":["data['start_turn_restricted'] = data['start_turn_restricted'].apply(change_str_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X3JERN2uOm0E"},"outputs":[],"source":["df_start_turn_restricted = pd.get_dummies(data['start_turn_restricted'], prefix='start_turn_restricted')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xq0z2cyCTjUt"},"outputs":[],"source":["data.drop('start_turn_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_start_turn_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"WLtvyLlvm8qu"},"source":["#### end_latitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"P9ECNC7ynMJx"},"outputs":[],"source":["resh = np.array(data['end_latitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['end_latitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"YnAYn3Zqm-Zu"},"source":["#### end_longitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Eiff3zJ9nP_v"},"outputs":[],"source":["resh = np.array(data['end_longitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['end_longitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"kviwofiR8w_p"},"source":["#### end_turn_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BVyfCjdiO5TA"},"outputs":[],"source":["data['end_turn_restricted'] = data['end_turn_restricted'].apply(change_str_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bZfIgFRiO50S"},"outputs":[],"source":["df_end_turn_restricted = pd.get_dummies(data['end_turn_restricted'], prefix='end_turn_restricted')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gD3t8oDHToRm"},"outputs":[],"source":["data.drop('end_turn_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_end_turn_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"Gs_4QibunBwI"},"source":["#### road_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JhT92R1QnSan"},"outputs":[],"source":["data.drop('road_name', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"h_A6TAVpnDYc"},"source":["#### start_node_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6XuW1jcinTvW"},"outputs":[],"source":["data.drop('start_node_name', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"NRCuv2ZknEmk"},"source":["#### end_node_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xv8NHxTanWsA"},"outputs":[],"source":["data.drop('end_node_name', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"9n82Ov-Y8zdx"},"source":["#### vehicle_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iFTCDc58PGEQ"},"outputs":[],"source":["data.drop('vehicle_restricted', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"qnJU47YeU_Gx"},"source":["## Data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"Dd0xriuFVKJF","outputId":"1d0a1f93-b376-4a49-b286-bbdc21cf2297"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lane_count</th>\n","      <th>start_latitude</th>\n","      <th>start_longitude</th>\n","      <th>end_latitude</th>\n","      <th>end_longitude</th>\n","      <th>target</th>\n","      <th>spring</th>\n","      <th>summer</th>\n","      <th>autumn</th>\n","      <th>winter</th>\n","      <th>...</th>\n","      <th>weight_0</th>\n","      <th>weight_32400</th>\n","      <th>weight_43200</th>\n","      <th>weight_50000</th>\n","      <th>type_0</th>\n","      <th>type_3</th>\n","      <th>start_turn_restricted_o</th>\n","      <th>start_turn_restricted_x</th>\n","      <th>end_turn_restricted_o</th>\n","      <th>end_turn_restricted_x</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>291236</th>\n","      <td>1</td>\n","      <td>0.733690</td>\n","      <td>0.374722</td>\n","      <td>0.726220</td>\n","      <td>0.371804</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291237</th>\n","      <td>2</td>\n","      <td>0.198072</td>\n","      <td>0.556306</td>\n","      <td>0.183479</td>\n","      <td>0.558201</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291238</th>\n","      <td>1</td>\n","      <td>0.800234</td>\n","      <td>0.419808</td>\n","      <td>0.812632</td>\n","      <td>0.420044</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>291239</th>\n","      <td>2</td>\n","      <td>0.036304</td>\n","      <td>0.433499</td>\n","      <td>0.039110</td>\n","      <td>0.433925</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291240</th>\n","      <td>3</td>\n","      <td>0.011400</td>\n","      <td>0.456675</td>\n","      <td>0.011581</td>\n","      <td>0.455533</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 38 columns</p>\n","</div>"],"text/plain":["        lane_count  start_latitude  start_longitude  end_latitude  \\\n","291236           1        0.733690         0.374722      0.726220   \n","291237           2        0.198072         0.556306      0.183479   \n","291238           1        0.800234         0.419808      0.812632   \n","291239           2        0.036304         0.433499      0.039110   \n","291240           3        0.011400         0.456675      0.011581   \n","\n","        end_longitude  target  spring  summer  autumn  winter  ...  weight_0  \\\n","291236       0.371804     0.0       0       1       0       0  ...         1   \n","291237       0.558201     0.0       0       1       0       0  ...         1   \n","291238       0.420044     0.0       0       1       0       0  ...         1   \n","291239       0.433925     0.0       0       1       0       0  ...         1   \n","291240       0.455533     0.0       0       1       0       0  ...         1   \n","\n","        weight_32400  weight_43200  weight_50000  type_0  type_3  \\\n","291236             0             0             0       1       0   \n","291237             0             0             0       1       0   \n","291238             0             0             0       1       0   \n","291239             0             0             0       1       0   \n","291240             0             0             0       1       0   \n","\n","        start_turn_restricted_o  start_turn_restricted_x  \\\n","291236                        0                        1   \n","291237                        0                        1   \n","291238                        1                        0   \n","291239                        0                        1   \n","291240                        0                        1   \n","\n","        end_turn_restricted_o  end_turn_restricted_x  \n","291236                      0                      1  \n","291237                      0                      1  \n","291238                      1                      0  \n","291239                      0                      1  \n","291240                      0                      1  \n","\n","[5 rows x 38 columns]"]},"execution_count":111,"metadata":{},"output_type":"execute_result"}],"source":["data.tail()"]},{"cell_type":"markdown","metadata":{"id":"sh1Pr9hAp4RQ"},"source":["## DataSet 분할 및 저장"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IgdMhgcbVLCd"},"outputs":[],"source":["train_df = data[:-len(data_test)].reset_index(drop=False).drop('index', axis=1)\n","test_df = data[-len(data_test):].reset_index(drop=False).drop('index', axis=1)\n","test_df.drop(['target'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HiHyCBSifEjU"},"outputs":[],"source":["train_df.to_parquet(\"./train_pp_2.parquet\")\n","test_df.to_parquet(\"./test_pp_2.parquet\")"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["MUfgUMGUUKoG","G4uAOyLTWKb_","vhMgrJ3iWZ8s","bOTmIZWqXEmL","G67xaXH-a0Fb","N_W5VtdzcndG","jtcZJrP_dTKr","0EAfPYWF8iIH","YottxjFd8n5s","hZk60ZOP8rBP"],"machine_shape":"hm","provenance":[{"file_id":"12QsS1PZghuevsz9NDDpEfOJ6yV2EAqCd","timestamp":1667638325131}]},"gpuClass":"premium","kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"},"vscode":{"interpreter":{"hash":"26de051ba29f2982a8de78e945f0abaf191376122a1563185a90213a26c5da77"}}},"nbformat":4,"nbformat_minor":0}