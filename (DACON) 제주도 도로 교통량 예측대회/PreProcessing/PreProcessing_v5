{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9JZIT8sd_ttU","executionInfo":{"status":"ok","timestamp":1668057628988,"user_tz":-540,"elapsed":18786,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"75bbd1e4-081e-45a4-d0d7-2029b4d642ba"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"WfWTfJo5WOvW"},"source":["## 라이브러리 정의 및 데이터 로드"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"i56hLkhfTnbR","executionInfo":{"status":"ok","timestamp":1668057629465,"user_tz":-540,"elapsed":480,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.preprocessing import MinMaxScaler\n","\n","pd.options.display.float_format = '{:.5f}'.format"]},{"cell_type":"code","source":["PATH = '/content/drive/MyDrive/AI_Contest/traffic/'"],"metadata":{"id":"mPPCdUki_0I1","executionInfo":{"status":"ok","timestamp":1668057629466,"user_tz":-540,"elapsed":22,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8UGfz-VuTvSz","outputId":"b8b9d67e-7977-4c4e-e6c1-34351537af96","executionInfo":{"status":"ok","timestamp":1668057635802,"user_tz":-540,"elapsed":6356,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(4701217, 23)\n","(291241, 22)\n"]}],"source":["data_train = pd.read_parquet(PATH + 'datasets/data_train.parquet')\n","data_test = pd.read_parquet(PATH + 'datasets/data_test.parquet')\n","data_info = pd.read_csv(PATH + 'datasets/data_info.csv')\n","print(data_train.shape)\n","print(data_test.shape)\n","# data_train.head(1).transpose()"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"lIBNlDLZFXmW","executionInfo":{"status":"ok","timestamp":1668057703153,"user_tz":-540,"elapsed":331,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data_test['target'] = np.zeros(len(data_test))"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"XiCuzAxFTxQ4","executionInfo":{"status":"ok","timestamp":1668057703889,"user_tz":-540,"elapsed":372,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data_train.drop(['id'], axis=1, inplace=True)\n","data_test.drop(['id'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"69gYVXOOT4fl","executionInfo":{"status":"ok","timestamp":1668057705199,"user_tz":-540,"elapsed":1312,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[],"source":["data = pd.concat([data_train, data_test], axis=0)\n","target = data_train['target']"]},{"cell_type":"markdown","metadata":{"id":"t-ROAbyNWSrI"},"source":["## 데이터 전처리"]},{"cell_type":"markdown","source":["전처리 final version - node_name 라벨인코딩\n","\n","train data안에 test data가 다 포함되어 있음을 확인 => LabelEncoding 시도"],"metadata":{"id":"l5rkZdlKB2Ts"}},{"cell_type":"markdown","metadata":{"id":"Gs_4QibunBwI"},"source":["#### road_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JhT92R1QnSan","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667988942909,"user_tz":-540,"elapsed":636,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"48f7cf1a-d306-429c-c3e7-1b62ba7bb45c"},"outputs":[{"output_type":"stream","name":"stdout","text":["15\n","0\n"]}],"source":["print(len(set(data_train['road_name'].unique()) - set(data_test['road_name'].unique())))\n","print(len(set(data_test['road_name'].unique()) - set(data_train['road_name'].unique())))"]},{"cell_type":"markdown","source":["이름이 겹치는 도로들의 평균속도 확인\n","\n","비슷한 위치가 아니므로 해당 도로 특성 상 평균속도가 모두 다른 것을 알 수 있음\n","\n","=> 도로를 묵지 않고 레이블인코딩 시도"],"metadata":{"id":"nAlSt_7kLT5k"}},{"cell_type":"markdown","source":["##### check roads"],"metadata":{"id":"vsUc3uV4Otq3"}},{"cell_type":"code","source":["# for i, v in enumerate(sorted(list(data_train['road_name'].unique()))):\n","#   if i % 10 == 0:\n","#     print(v, end=' ')\n","#     print()\n","#   else:\n","#     print(v, end=' ')"],"metadata":{"id":"rlLj91yTKLPq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# jibangs = ['지방도1112호선', '지방도1115호선', '지방도1116호선', '지방도1117호선', '지방도1118호선', \n","#           '지방도1119호선', '지방도1120호선', '지방도1132호선', '지방도1136호선', '지방도97호선']\n","# gwangwangs = ['관광단지1로', '관광단지2로', '관광단지로']\n","# ilbans = ['일반국도11호선', '일반국도12호선', '일반국도16호선', '일반국도95호선', '일반국도99호선']"],"metadata":{"id":"XQ7F6bNHKU5n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# sp_jibang = [[] for _ in range(10)]\n","# for j, jibang in enumerate(jibangs):\n","#   for i, v in enumerate(data_train['road_name']):\n","#     if v == jibang:\n","#       sp_jibang[j].append(data_train['target'][i])"],"metadata":{"id":"CQ7a0HPNMIzO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# for i in range(len(sp_jibang)):\n","#   print(sum(sp_jibang[i]) / len(sp_jibang[i]))"],"metadata":{"id":"NJ0W5_kRNezT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# sp_gwangwang = [[] for _ in range(3)]\n","# for j, gwangwang in tqdm(enumerate(gwangwangs)):\n","#   for i, v in enumerate(data_train['road_name']):\n","#     if v == gwangwang:\n","#       sp_gwangwang[j].append(data_train['target'][i])"],"metadata":{"id":"lO_NXipiN3tb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# for i in range(len(sp_gwangwang)):\n","#   print(sum(sp_gwangwang[i]) / len(sp_gwangwang[i]))"],"metadata":{"id":"L1qC6SFlN4ek"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# sp_ilban = [[] for _ in range(5)]\n","# for j, ilban in tqdm(enumerate(ilbans)):\n","#   for i, v in enumerate(data_train['road_name']):\n","#     if v == ilban:\n","#       sp_ilban[j].append(data_train['target'][i])"],"metadata":{"id":"xivAcAO3OD-p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# for i in range(len(sp_ilban)):\n","#   print(sum(sp_ilban[i]) / len(sp_ilban[i]))"],"metadata":{"id":"ExLPIH47OFF8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### labelEncoding"],"metadata":{"id":"eQp1-z0COyXi"}},{"cell_type":"code","source":["road_speed = data_train.groupby('road_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환전\\n', road_speed[:5])\n","\n","for i, a in enumerate(list(road_speed.index)):\n","    data_train.loc[data_train['road_name'] == a, 'road_name'] = i # 라벨 인코딩\n","    data_test.loc[data_test['road_name'] == a, 'road_name'] = i\n","road_speed = data_train.groupby('road_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환후\\n', road_speed[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"taMQ6JYoO2_x","executionInfo":{"status":"ok","timestamp":1667988967269,"user_tz":-540,"elapsed":24363,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"a42d5010-c47a-4d6c-dcaf-248295eae1a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["변환전\n"," road_name\n","일반국도95호선    70.44344\n","지방도1116호선   61.58072\n","지방도97호선     60.52572\n","지방도1117호선   58.90331\n","애조로         57.21279\n","Name: target, dtype: float64\n","변환후\n"," road_name\n","0   70.44344\n","1   61.58072\n","2   60.52572\n","3   58.90331\n","4   57.21279\n","Name: target, dtype: float64\n"]}]},{"cell_type":"code","source":["data['road_name'] = pd.concat([data_train['road_name'], data_test['road_name']], axis=0).astype(int)"],"metadata":{"id":"c1hZMrGxQE8c"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"h_A6TAVpnDYc"},"source":["#### start_node_name"]},{"cell_type":"code","source":["start_nodes = data_train.groupby('start_node_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환전\\n', start_nodes[:5])\n","\n","for i, a in enumerate(list(start_nodes.index)):\n","    data_train.loc[data_train['start_node_name'] == a, 'start_node_name'] = i # 라벨 인코딩\n","    data_test.loc[data_test['start_node_name'] == a, 'start_node_name'] = i\n","start_nodes = data_train.groupby('start_node_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환후\\n', start_nodes[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bn-P-BoK4XuN","executionInfo":{"status":"ok","timestamp":1667989155954,"user_tz":-540,"elapsed":188695,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"a817b3bd-8206-4a2b-c19c-2adcc1f2345c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["변환전\n"," start_node_name\n","동광1교차로   80.93348\n","서원       78.07443\n","제1동광교    77.49428\n","제4동광교    77.06280\n","색달육교     76.75604\n","Name: target, dtype: float64\n","변환후\n"," start_node_name\n","0   80.93348\n","1   78.07443\n","2   77.49428\n","3   77.06280\n","4   76.75604\n","Name: target, dtype: float64\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6XuW1jcinTvW"},"outputs":[],"source":["data['start_node_name'] = pd.concat([data_train['start_node_name'], data_test['start_node_name']], axis=0).astype(int)"]},{"cell_type":"markdown","metadata":{"id":"NRCuv2ZknEmk"},"source":["#### end_node_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xv8NHxTanWsA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667989344295,"user_tz":-540,"elapsed":188362,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"1cbea6f6-3446-49b6-e693-56a14a825b47"},"outputs":[{"output_type":"stream","name":"stdout","text":["변환전\n"," end_node_name\n","동광2교차로   80.93330\n","제1동광교    78.02114\n","봉성교차로    77.21907\n","제4동광교    77.06280\n","색달육교     76.75604\n","Name: target, dtype: float64\n","변환후\n"," end_node_name\n","0   80.93330\n","1   78.02114\n","2   77.21907\n","3   77.06280\n","4   76.75604\n","Name: target, dtype: float64\n"]}],"source":["end_nodes = data_train.groupby('end_node_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환전\\n', end_nodes[:5])\n","\n","for i, a in enumerate(list(end_nodes.index)):\n","    data_train.loc[data_train['end_node_name'] == a, 'end_node_name'] = i # 라벨 인코딩\n","    data_test.loc[data_test['end_node_name'] == a, 'end_node_name'] = i\n","end_nodes = data_train.groupby('end_node_name')['target'].agg('mean').sort_values(ascending=False)\n","print('변환후\\n', end_nodes[:5])"]},{"cell_type":"code","source":["data['end_node_name'] = pd.concat([data_train['end_node_name'], data_test['end_node_name']], axis=0).astype(int)"],"metadata":{"id":"OmjnAPja4vPu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"MUfgUMGUUKoG"},"source":["#### base_date"]},{"cell_type":"markdown","metadata":{"id":"LKcchrbFUMX4"},"source":["월 별로 고려 시 선형성을 띌 수 있기에 계절로 구분하여 OneHotEncoding"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ARk7UnkeUF1V"},"outputs":[],"source":["def change_date_to_season(x):\n","  month = int(str(x)[4:6])\n","  if 3 <= month <= 5:\n","    return \"spring\"\n","  elif 6 <= month <= 8:\n","    return \"summer\"\n","  elif 9 <= month <= 11:\n","    return \"autumn\"\n","  else:\n","    return \"winter\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ENabiqfjUoFn"},"outputs":[],"source":["data['base_date'] = data['base_date'].apply(change_date_to_season)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ie1czZYfRtbD"},"outputs":[],"source":["df_base_date1 = pd.get_dummies(data['base_date'])\n","df_base_date2 = df_base_date1[['spring', 'summer', 'autumn', 'winter']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MNFSPdeFRUqU"},"outputs":[],"source":["data.drop('base_date', axis=1, inplace=True)\n","data = pd.concat([data, df_base_date2], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"G4uAOyLTWKb_"},"source":["#### day_of_week"]},{"cell_type":"markdown","metadata":{"id":"zl47kLtEWVZ6"},"source":["평일과 주말로 나누는 것으로 결정"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zGhucGp6NjIY"},"outputs":[],"source":["def change_week_to_str(x):\n","  if x in ['월', '화', '수', '목', '금']:\n","    return 'weekday'\n","  else:\n","    return 'weekend'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dyHbgkCONyJj"},"outputs":[],"source":["data['day_of_week'] = data['day_of_week'].apply(change_week_to_str)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zBSqJSonN6GX"},"outputs":[],"source":["df_day_of_week = pd.get_dummies(data['day_of_week'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FBJrCHYFSc7C"},"outputs":[],"source":["data.drop('day_of_week', axis=1, inplace=True)\n","data = pd.concat([data, df_day_of_week], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"vhMgrJ3iWZ8s"},"source":["#### base_hour"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PhI1LCPpV829"},"outputs":[],"source":["def change_time_to_slot(x):\n","  if 8 <= x <= 12:\n","    return \"time1\"\n","  elif 13 <= x <= 17:\n","    return \"time2\"\n","  elif 18 <= x <= 22:\n","    return \"time3\"\n","  else:\n","    return \"time4\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VReiIqjzZqIt"},"outputs":[],"source":["data['base_hour'] = data['base_hour'].apply(change_time_to_slot)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cTTy87b8S9T6"},"outputs":[],"source":["df_base_hour = pd.get_dummies(data['base_hour'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bwldt8NaS7ja"},"outputs":[],"source":["data.drop('base_hour', axis=1, inplace=True)\n","data = pd.concat([data, df_base_hour], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"bOTmIZWqXEmL"},"source":["#### lane_count"]},{"cell_type":"code","source":["df_lane_count = pd.get_dummies(data['lane_count'], prefix=\"lane\")"],"metadata":{"id":"FNSZiiBF9pPs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.drop('lane_count', axis=1, inplace=True)\n","data = pd.concat([data, df_lane_count], axis=1)"],"metadata":{"id":"hkIfvgGm9wea"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"G67xaXH-a0Fb"},"source":["#### road_rating"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ljakn58wa2rA"},"outputs":[],"source":["df_road_rating = pd.get_dummies(data['road_rating'], prefix=\"rate\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zinxvUxmTJeK"},"outputs":[],"source":["data.drop('road_rating', axis=1, inplace=True)\n","data = pd.concat([data, df_road_rating], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"N_W5VtdzcndG"},"source":["#### multi_linked"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vtjXSgLAcq_o"},"outputs":[],"source":["def change_int_to_char(x):\n","  if x == 0:\n","    return 'o'\n","  else:\n","    return 'x'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RSKUdoCwc16N"},"outputs":[],"source":["data['multi_linked'] = data['multi_linked'].apply(change_int_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-rsdXK_PdDXw"},"outputs":[],"source":["df_multi_linked = pd.get_dummies(data['multi_linked'], prefix='multi')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3tNrsmdjTQIu"},"outputs":[],"source":["data.drop('multi_linked', axis=1, inplace=True)\n","data = pd.concat([data, df_multi_linked], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"jtcZJrP_dTKr"},"source":["#### connect_code"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kcVcEnYJdGvI"},"outputs":[],"source":["def change_int_to_char(x):\n","  if x == 0:\n","    return 'x'\n","  else:\n","    return 'o'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DydDeBVVdYDa"},"outputs":[],"source":["data['connect_code'] = data['connect_code'].apply(change_int_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FMszXdoCdZ3y"},"outputs":[],"source":["df_connect_code = pd.get_dummies(data['connect_code'], prefix='connect')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BsPajWIWTXNI"},"outputs":[],"source":["data.drop('connect_code', axis=1, inplace=True)\n","data = pd.concat([data, df_connect_code], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"0EAfPYWF8iIH"},"source":["#### maximum_speed_limit"]},{"cell_type":"markdown","metadata":{"id":"iz5AqQ5YCVlP"},"source":["80대체를 생각해 보았으나 데이터 개수도 적고 잘못 기입될(이상치일) 확률이 적다고 판단되어 제거로 선택"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"StV824UwAafS"},"outputs":[],"source":["# drop 시 런타임 에러가 떠서 dropna 사용\n","def change_40_to_nan(x):\n","  if x == 40:\n","    return np.nan\n","  else:\n","    return x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nM271UJYKnw6"},"outputs":[],"source":["data['maximum_speed_limit'] = data['maximum_speed_limit'].apply(change_40_to_nan)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VHrXTfSsKu-c"},"outputs":[],"source":["data.dropna(axis=0, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8r4ZBtCcDkvn"},"outputs":[],"source":["data['maximum_speed_limit'] = data['maximum_speed_limit'].astype('int64')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NQFmYDUKG_Rf"},"outputs":[],"source":["df_maximum_speed_limit = pd.get_dummies(data['maximum_speed_limit'], prefix='limit')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f11Hdf07LxyL"},"outputs":[],"source":["data.drop('maximum_speed_limit', axis=1, inplace=True)\n","data = pd.concat([data, df_maximum_speed_limit], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"YottxjFd8n5s"},"source":["#### weight_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"71Kd624XBPmh"},"outputs":[],"source":["data['weight_restricted'] = data['weight_restricted'].astype('int64')\n","df_weight_restricted = pd.get_dummies(data['weight_restricted'], prefix='weight')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jb7IZmmdTbX7"},"outputs":[],"source":["data.drop('weight_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_weight_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"hZk60ZOP8rBP"},"source":["#### height_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j-j9d2njLc3z"},"outputs":[],"source":["data.drop('height_restricted', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"lNVWrz1-8s7m"},"source":["#### road_type"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CixKXZY4L8iQ"},"outputs":[],"source":["df_road_type = pd.get_dummies(data['road_type'], prefix='type')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S20HEIliTfb0"},"outputs":[],"source":["data.drop('road_type', axis=1, inplace=True)\n","data = pd.concat([data, df_road_type], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"tgXzmSpam0V2"},"source":["#### start_latitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4qcUbHA5nITG"},"outputs":[],"source":["resh = np.array(data['start_latitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['start_latitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"lfB7snS8m3KB"},"source":["#### start_longitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qtJ7goXMnKNM"},"outputs":[],"source":["resh = np.array(data['start_longitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['start_longitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"A4m-bkJ88uG6","tags":[]},"source":["#### start_turn_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gaP6NhSqMf_9"},"outputs":[],"source":["def change_str_to_char(x):\n","  if x == '없음':\n","    return 'x'\n","  else:\n","    return 'o'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mR3CQziqObdE"},"outputs":[],"source":["data['start_turn_restricted'] = data['start_turn_restricted'].apply(change_str_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X3JERN2uOm0E"},"outputs":[],"source":["df_start_turn_restricted = pd.get_dummies(data['start_turn_restricted'], prefix='start_turn_restricted')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xq0z2cyCTjUt"},"outputs":[],"source":["data.drop('start_turn_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_start_turn_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"WLtvyLlvm8qu"},"source":["#### end_latitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"P9ECNC7ynMJx"},"outputs":[],"source":["resh = np.array(data['end_latitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['end_latitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"YnAYn3Zqm-Zu"},"source":["#### end_longitude"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Eiff3zJ9nP_v"},"outputs":[],"source":["resh = np.array(data['end_longitude']).reshape(-1, 1)\n","\n","mms = MinMaxScaler()\n","mms.fit(resh[:-len(data_test)])\n","data['end_longitude'] = mms.transform(resh)"]},{"cell_type":"markdown","metadata":{"id":"kviwofiR8w_p"},"source":["#### end_turn_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BVyfCjdiO5TA"},"outputs":[],"source":["data['end_turn_restricted'] = data['end_turn_restricted'].apply(change_str_to_char)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bZfIgFRiO50S"},"outputs":[],"source":["df_end_turn_restricted = pd.get_dummies(data['end_turn_restricted'], prefix='end_turn_restricted')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gD3t8oDHToRm"},"outputs":[],"source":["data.drop('end_turn_restricted', axis=1, inplace=True)\n","data = pd.concat([data, df_end_turn_restricted], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"9n82Ov-Y8zdx"},"source":["#### vehicle_restricted"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iFTCDc58PGEQ"},"outputs":[],"source":["data.drop('vehicle_restricted', axis=1, inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"qnJU47YeU_Gx"},"source":["## Data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"Dd0xriuFVKJF","outputId":"440b88ab-da52-4367-a754-ad0289dce846","executionInfo":{"status":"ok","timestamp":1667989370600,"user_tz":-540,"elapsed":5,"user":{"displayName":"정용한","userId":"17796726024763242388"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   road_name  start_node_name  start_latitude  start_longitude  end_node_name  \\\n","0         10              155         0.58953          0.64143            135   \n","1         22              419         0.82296          0.46302            421   \n","2         15               53         0.11423          0.24853             23   \n","3         49              454         0.00847          0.51393            435   \n","4         16              256         0.69977          0.19234            162   \n","\n","   end_latitude  end_longitude   target  spring  summer  ...  weight_0  \\\n","0       0.58953        0.64106 52.00000       0       1  ...         0   \n","1       0.83602        0.45919 30.00000       0       1  ...         1   \n","2       0.11719        0.23991 61.00000       0       0  ...         1   \n","3       0.00682        0.51263 20.00000       1       0  ...         1   \n","4       0.70125        0.19715 38.00000       0       0  ...         1   \n","\n","   weight_32400  weight_43200  weight_50000  type_0  type_3  \\\n","0             1             0             0       0       1   \n","1             0             0             0       1       0   \n","2             0             0             0       1       0   \n","3             0             0             0       1       0   \n","4             0             0             0       1       0   \n","\n","   start_turn_restricted_o  start_turn_restricted_x  end_turn_restricted_o  \\\n","0                        0                        1                      0   \n","1                        1                        0                      0   \n","2                        0                        1                      0   \n","3                        0                        1                      0   \n","4                        0                        1                      0   \n","\n","   end_turn_restricted_x  \n","0                      1  \n","1                      1  \n","2                      1  \n","3                      1  \n","4                      1  \n","\n","[5 rows x 43 columns]"],"text/html":["\n","  <div id=\"df-cf638559-12de-4ca5-96c7-5b614950343c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>road_name</th>\n","      <th>start_node_name</th>\n","      <th>start_latitude</th>\n","      <th>start_longitude</th>\n","      <th>end_node_name</th>\n","      <th>end_latitude</th>\n","      <th>end_longitude</th>\n","      <th>target</th>\n","      <th>spring</th>\n","      <th>summer</th>\n","      <th>...</th>\n","      <th>weight_0</th>\n","      <th>weight_32400</th>\n","      <th>weight_43200</th>\n","      <th>weight_50000</th>\n","      <th>type_0</th>\n","      <th>type_3</th>\n","      <th>start_turn_restricted_o</th>\n","      <th>start_turn_restricted_x</th>\n","      <th>end_turn_restricted_o</th>\n","      <th>end_turn_restricted_x</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>155</td>\n","      <td>0.58953</td>\n","      <td>0.64143</td>\n","      <td>135</td>\n","      <td>0.58953</td>\n","      <td>0.64106</td>\n","      <td>52.00000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>419</td>\n","      <td>0.82296</td>\n","      <td>0.46302</td>\n","      <td>421</td>\n","      <td>0.83602</td>\n","      <td>0.45919</td>\n","      <td>30.00000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15</td>\n","      <td>53</td>\n","      <td>0.11423</td>\n","      <td>0.24853</td>\n","      <td>23</td>\n","      <td>0.11719</td>\n","      <td>0.23991</td>\n","      <td>61.00000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>49</td>\n","      <td>454</td>\n","      <td>0.00847</td>\n","      <td>0.51393</td>\n","      <td>435</td>\n","      <td>0.00682</td>\n","      <td>0.51263</td>\n","      <td>20.00000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16</td>\n","      <td>256</td>\n","      <td>0.69977</td>\n","      <td>0.19234</td>\n","      <td>162</td>\n","      <td>0.70125</td>\n","      <td>0.19715</td>\n","      <td>38.00000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 43 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf638559-12de-4ca5-96c7-5b614950343c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf638559-12de-4ca5-96c7-5b614950343c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf638559-12de-4ca5-96c7-5b614950343c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}],"source":["data.head()"]},{"cell_type":"markdown","metadata":{"id":"sh1Pr9hAp4RQ"},"source":["## DataSet 분할 및 저장"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IgdMhgcbVLCd"},"outputs":[],"source":["train_df = data[:-len(data_test)].reset_index(drop=False).drop('index', axis=1)\n","test_df = data[-len(data_test):].reset_index(drop=False).drop('index', axis=1)\n","test_df.drop(['target'], axis=1, inplace=True)"]},{"cell_type":"code","source":["corr = train_df.corr()['target']"],"metadata":{"id":"rw8iVg8fz7hl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["corr.sort_values(ascending=False)[1:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O0NWp8VD001j","executionInfo":{"status":"ok","timestamp":1667989393536,"user_tz":-540,"elapsed":18,"user":{"displayName":"정용한","userId":"17796726024763242388"}},"outputId":"1e77b15f-2363-4e42-a99c-689579699364"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["limit_80                   0.47126\n","weight_43200               0.29358\n","time4                      0.22237\n","rate_103                   0.20648\n","type_3                     0.20207\n","rate_106                   0.16727\n","end_turn_restricted_x      0.16245\n","start_turn_restricted_x    0.15575\n","lane_2                     0.13551\n","weight_32400               0.06823\n","start_latitude             0.03486\n","end_latitude               0.03467\n","lane_1                     0.03204\n","autumn                     0.03054\n","connect_o                  0.01920\n","weight_50000               0.01716\n","winter                     0.01510\n","spring                     0.01040\n","weekend                    0.00987\n","multi_o                    0.00838\n","end_longitude              0.00057\n","start_longitude            0.00040\n","multi_x                   -0.00838\n","weekday                   -0.00987\n","connect_x                 -0.01920\n","limit_60                  -0.02061\n","limit_70                  -0.04532\n","time3                     -0.05600\n","summer                    -0.06748\n","time1                     -0.07709\n","time2                     -0.11962\n","limit_30                  -0.14994\n","start_turn_restricted_o   -0.15575\n","end_turn_restricted_o     -0.16245\n","type_0                    -0.20207\n","lane_3                    -0.22133\n","limit_50                  -0.25269\n","weight_0                  -0.28334\n","rate_107                  -0.36035\n","road_name                 -0.61006\n","start_node_name           -0.83931\n","end_node_name             -0.84557\n","Name: target, dtype: float64"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HiHyCBSifEjU"},"outputs":[],"source":["train_df.to_parquet(PATH+\"datasets/train_v5.parquet\")\n","test_df.to_parquet(PATH+\"datasets/test_v5.parquet\")"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["MUfgUMGUUKoG","G4uAOyLTWKb_","vhMgrJ3iWZ8s","bOTmIZWqXEmL","G67xaXH-a0Fb","N_W5VtdzcndG","jtcZJrP_dTKr","0EAfPYWF8iIH","YottxjFd8n5s","hZk60ZOP8rBP"],"machine_shape":"hm","provenance":[{"file_id":"1YfsEZMU0Fyc4FXgnsuV4lTwsni6oBrp2","timestamp":1667987714651},{"file_id":"1IFahGNpzSrpMtWxZ2Z9R9caNPaouRSjE","timestamp":1667654552639},{"file_id":"1RedVdMjKw0a4chlAnf_578bISstCibel","timestamp":1667640934239},{"file_id":"12QsS1PZghuevsz9NDDpEfOJ6yV2EAqCd","timestamp":1667638325131}]},"gpuClass":"premium","kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"},"vscode":{"interpreter":{"hash":"26de051ba29f2982a8de78e945f0abaf191376122a1563185a90213a26c5da77"}}},"nbformat":4,"nbformat_minor":0}